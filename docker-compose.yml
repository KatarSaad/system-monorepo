version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: system-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: system_db
      MYSQL_USER: system_user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - system-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: system-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - system-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: system-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: mysql://system_user:password@mysql:3306/system_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      LOG_LEVEL: debug
      RATE_LIMIT_TTL: 60
      RATE_LIMIT_LIMIT: 100
      CORS_ORIGIN: http://localhost:3002
      SWAGGER_ENABLED: true
      SWAGGER_PATH: api/docs
      MAX_FILE_SIZE: 10485760
      UPLOAD_PATH: ./uploads
      PROMETHEUS_ENABLED: true
      HEALTH_CHECK_ENABLED: true
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - system-network
    volumes:
      - ./services/api:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    command: npm run start:dev

volumes:
  mysql_data:

networks:
  system-network:
    driver: bridge